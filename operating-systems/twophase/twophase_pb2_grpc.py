# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import twophase_pb2 as twophase__pb2


class WorkerStub(object):
  """Mandatory methods: 
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCommitted = channel.unary_unary(
        '/Worker/GetCommitted',
        request_serializer=twophase__pb2.GetCommittedArgs.SerializeToString,
        response_deserializer=twophase__pb2.MaybeValue.FromString,
        )
    self.SetValue = channel.unary_unary(
        '/Worker/SetValue',
        request_serializer=twophase__pb2.Ballot.SerializeToString,
        response_deserializer=twophase__pb2.Empty.FromString,
        )
    self.CastVote = channel.unary_unary(
        '/Worker/CastVote',
        request_serializer=twophase__pb2.Ballot.SerializeToString,
        response_deserializer=twophase__pb2.Ballot.FromString,
        )
    self.Abort = channel.unary_unary(
        '/Worker/Abort',
        request_serializer=twophase__pb2.Ballot.SerializeToString,
        response_deserializer=twophase__pb2.Empty.FromString,
        )


class WorkerServicer(object):
  """Mandatory methods: 
  """

  def GetCommitted(self, request, context):
    """return the currently committed value, if it is known,
    or indicate that it is unavailable 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetValue(self, request, context):
    """Method you are likely to change used by base implementation: 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CastVote(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Abort(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WorkerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCommitted': grpc.unary_unary_rpc_method_handler(
          servicer.GetCommitted,
          request_deserializer=twophase__pb2.GetCommittedArgs.FromString,
          response_serializer=twophase__pb2.MaybeValue.SerializeToString,
      ),
      'SetValue': grpc.unary_unary_rpc_method_handler(
          servicer.SetValue,
          request_deserializer=twophase__pb2.Ballot.FromString,
          response_serializer=twophase__pb2.Empty.SerializeToString,
      ),
      'CastVote': grpc.unary_unary_rpc_method_handler(
          servicer.CastVote,
          request_deserializer=twophase__pb2.Ballot.FromString,
          response_serializer=twophase__pb2.Ballot.SerializeToString,
      ),
      'Abort': grpc.unary_unary_rpc_method_handler(
          servicer.Abort,
          request_deserializer=twophase__pb2.Ballot.FromString,
          response_serializer=twophase__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Worker', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CoordinatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetValue = channel.unary_unary(
        '/Coordinator/SetValue',
        request_serializer=twophase__pb2.MaybeValue.SerializeToString,
        response_deserializer=twophase__pb2.Empty.FromString,
        )


class CoordinatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetValue(self, request, context):
    """Mandatory methods: 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CoordinatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetValue': grpc.unary_unary_rpc_method_handler(
          servicer.SetValue,
          request_deserializer=twophase__pb2.MaybeValue.FromString,
          response_serializer=twophase__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Coordinator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
